apply plugin: 'com.android.application'

android {
    signingConfigs {
        tab8platformkey
    }

    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.micronet.vehiclebussample"
        minSdkVersion 28
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"
        setProperty("archivesBaseName", "VehicleBusSample-v" + versionName)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk{
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
    }
    dependencies {
        implementation 'com.android.support:design:28.0.0'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.tab8platformkey
        }
        debug{
            signingConfig signingConfigs.tab8platformkey
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs',include: ['*.jar', '*.aar', '*.so'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "android.arch.lifecycle:viewmodel:1.1.1"
}

def props = new Properties()

props.load(new FileInputStream(rootProject.file("tab8platformkey.properties")))
android.signingConfigs.tab8platformkey.storeFile rootProject.file(props.keyStore)
android.signingConfigs.tab8platformkey.storePassword props.keyStorePassword
android.signingConfigs.tab8platformkey.keyAlias props.keyAlias
android.signingConfigs.tab8platformkey.keyPassword props.keyAliasPassword
